From MailSource.m:

	// TODO
//	NSURL* urlToIndex = [NSURL fileURLWithPath: @"/Users/reutter/Library/Mail/Envelope Index"];
//	NSLog(@"urlToIndex = %@", urlToIndex);
//	SKIndexRef mailIndex = SKIndexOpenWithURL((CFURLRef)urlToIndex, NULL, 0);
//	NSLog(@"Got a mail index with %d numbers.", SKIndexGetDocumentCount(mailIndex));
//	SKIndexClose(mailIndex);
//	NSError* theError;
	
//	NSBundle* theBundle = [NSBundle bundleWithPath: @"/Applications/Mail.app"];
//	[theBundle load];
	
//	NSManagedObjectModel* mom = [NSManagedObjectModel mergedModelFromBundles: [NSArray arrayWithObjects: theBundle, nil]];
	
//	NSLog(@"Bundle is %@", [NSBundle bundleWithPath: @"/Applications/Mail.app"]);
//	NSLog(@"mom is %@", mom);
	
//	NSPersistentStoreCoordinator* psc = [[NSPersistentStoreCoordinator alloc] init];
/*
	NSPersistentDocument* pd = [[NSPersistentDocument alloc] init];
	[pd readFromURL: urlToIndex
			 ofType: NSSQLiteStoreType
			  error: &theError];
	
	NSLog(@"persistent document is %@", pd);
*/
/*	NSSQ newStore = [psc addPersistentStoreWithType: NSSQLiteStoreType 
									configuration: nil
											  URL: urlToIndex
										  options: [NSDictionary dictionaryWithObject: [NSNumber numberWithBool: YES]
																			   forKey: NSReadOnlyPersistentStoreOption]
											error: &theError];
	NSLog(@"newStore is %@", newStore);
*/	
//	NSManagedObjectModel* mom = [psc managedObjectModel];
	
//	NSLog(@"mom is %@", mom);
	
//	NSFetchRequest* fr = [[NSFetchRequest alloc] init];
	
//	NSEntityDescription *entity = [[mom entitiesByName]  objectForKey: @"date_received"];
//	[fr setEntity: entity];
	
//	NSLog(@"fr is %@", fr);
	
	/*
	NSLog(@"---------------------------------------------");
	NSLog(@"Meta Data is %@", metaData);
	NSLog(@"---------------------------------------------");
*/
	// QuickLite Framework
	





//	[theABPeoplePicker deselectAll: self];
	DLog(@"theABUsers = %@", theABUsers);
	DLog(@"theABGroups = %@", theABGroups);
	unsigned i;
	if (theABGroups)
	{
		for (i = 0; i < [theABGroups count]; ++i)
		{
			DLog(@"[theABPeoplePicker selectGroup: [%@]\n         byExtendingSelection: %@", [theABGroups objectAtIndex: i], i?@"YES":@"NO");
			[theABPeoplePicker selectGroup: [theABGroups objectAtIndex: i]
					  byExtendingSelection: i];
		}
	}
	if (theABUsers)
	{
		for (i = 0; i < [theABUsers count]; ++i)
		{
			DLog(@"[theABPeoplePicker selectRecord: [%@]\n          byExtendingSelection: %@", [theABUsers objectAtIndex: i], i?@"YES":@"NO");
			[theABPeoplePicker selectRecord: [theABUsers objectAtIndex: i]
					   byExtendingSelection: i];
		}
	}
	
	[self refreshABPeoplePicker];
